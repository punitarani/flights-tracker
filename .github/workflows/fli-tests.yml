name: Fli Tests (only)

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  fli-tests:
    name: Run Fli Tests Only
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      SEATS_AERO_API_KEY: ${{ secrets.SEATS_AERO_API_KEY }}
      WORKER_URL: ${{ secrets.WORKER_URL }}
      WORKER_API_KEY: ${{ secrets.WORKER_API_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY }}
      NEXT_PUBLIC_MAPKIT_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPKIT_TOKEN }}
      RUN_INTEGRATION_TESTS: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.cache/bun
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb', 'bun.lock', 'bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Validate required environment variables
        run: |
          set -euo pipefail
          required_vars=(DATABASE_URL SUPABASE_SECRET_KEY RESEND_API_KEY SEATS_AERO_API_KEY WORKER_URL WORKER_API_KEY NEXT_PUBLIC_SUPABASE_URL NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY NEXT_PUBLIC_MAPKIT_TOKEN)
          missing=0
          for v in "${required_vars[@]}"; do
            if [ -z "${!v:-}" ]; then
              echo "Missing required env: $v" >&2
              missing=1
            fi
          done
          if [ "$missing" -ne 0 ]; then
            exit 1
          fi

      - name: Run Fli tests only
        run: bun run test:fli
